#!/usr/bin/env -S ERL_FLAGS=+B elixir
Mix.install([])

<%= if @deps_only do %>
  if System.get_env("DEPS_ONLY") == "true" do
    System.halt(0)
    Process.sleep(:infinity)
  end
<% end %>

defmodule <%= @mod %> do
  @moduledoc """

  ## Usage

      $ bin/<%= @script %> --help

  """

  @args [help: :boolean]
  def main(args) do
    {parsed, args} = OptionParser.parse!(args, strict: @args)
    cmd(parsed, args)
  end

  defp cmd([help: true], _), do: IO.puts(@moduledoc)
  defp cmd(_parsed, _args) do
    IO.puts(@moduledoc)
    stop(1)
  end

  defp stop(code) do
    System.stop(code)
    Process.sleep(:infinity)
  end
end

<%= if @tests do %>
  if System.get_env("MIX_ENV") == "test" do
    ExUnit.start()
    defmodule <%= @mod %>Test do
      use ExUnit.Case, async: true
      import ExUnit.CaptureIO

      test "prints usage message when no arguments are passed" do
        assert capture_io(fn -> <%= @mod %>.main([]) end) =~ "Usage"
      end

      test "prints usage message when passed --help" do
        assert capture_io(fn -> <%= @mod %>.main(["--help"]) end) =~ "Usage"
      end
    end
  else
    System.argv()
    |> <%= @mod %>.main()
  end
<% else %>
  System.argv()
  |> <%= @mod %>.main()
<% end %>
